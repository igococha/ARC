<beast version='2.6'
       namespace='beast.app.beauti
       :beast.core
       :beast.evolution.branchratemodel
       :beast.evolution.speciation
       :beast.evolution.tree.coalescent
       :beast.core.util
       :beast.evolution.nuc
       :beast.evolution.operators
       :beast.evolution.sitemodel
       :beast.evolution.substitutionmodel
       :beast.evolution.likelihood
       :beast.evolution:beast.math.distributions'
       templateinfo='template for the Additive Relaxed Clock Model (ARC)'>
       
  <mergewith point='clockModelTemplates'>
 
  
  <subtemplate id='ARCwithProbs' class='beast.evolution.branchratemodel.ARClockModel'
               mainid='ARClock.c:$(n)'
               suppressInputs='beast.evolution.branchratemodel.ARClockModel.clock.rate
               ,beast.evolution.branchratemodel.ARClockModel.rateCategories
               ,beast.evolution.branchratemodel.ARClockModel.numberOfDiscreteRates
               ,beast.evolution.branchratemodel.ARClockModel.tree'>
  <![CDATA[
   	<plugin spec='beast.evolution.branchratemodel.ARClockModel' id='ARClock.c:$(n)' tree='@Tree.t:$(n)'>
   	  <rateProbs spec='parameter.RealParameter' id='rateProbs.c:$(n)'  dimension='1' value='0.5' estimate='true' />    	
	  <rateMean spec="parameter.RealParameter"  id='rateMean.c:$(n)' value=".005" lower=".0001" upper="10.0" estimate='true' />
	  <rateOmega spec="parameter.RealParameter" id='rateOmega:c$(n)' value=".5" lower="0.1" upper="30" estimate='true' /> 
	</plugin>  
	
	<operator id='rateMeanScaler.c:$(n)' spec='ScaleOperator' scaleAll='false' scaleFactor="0.75" weight="3" parameter='@rateMean.c:$(n)' /> 
	
    <prior id="rateMeanPrior.c:$(n)"  x="@rateMean.c:$(n)">
		<distr spec="beast.math.distributions.Gamma">
		  <parameter name="alpha" value="0.005 " estimate="false" /> 
		  <parameter name="beta" value="1.0" estimate="false" />
		</distr>
	</prior>    

  
  ]]>
 
  <connect srcID='rateMean.c:$(n)' targetID='state' inputName='stateNode' 
      if='inlikelihood(rateMean.c:$(n)) and rateMean.c:$(n)/estimate=true' />
           
     
  <connect srcID='rateMeanScaler.c:$(n)' targetID='mcmc' inputName='operator'
            if='inlikelihood(rateMean.c:$(n)) and rateMean.c:$(n)/estimate=true' >
           Scale mean of rate distribution of partition c:$(n)
  </connect>
 
  <connect srcID='rateMeanPrior.c:$(n)' targetID='prior' inputName='distribution'
            if='inlikelihood(rateMean.c:$(n)) and inlikelihood(Tree.t:$(n)) and rateMean.c:$(n)/estimate=true'>
            prior mean of mu (mean ARC distribution) of partition c:$(n)
   </connect>
  
  </subtemplate>
  
     
  </mergewith>

</beast>

